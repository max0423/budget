{"version":3,"sources":["components/pickers/BasePicker.tsx"],"names":[],"mappings":"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","file":"components/pickers/BasePicker.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  autobind,\r\n  css,\r\n  getRTL\r\n} from '../../Utilities';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { Callout, DirectionalHint } from '../../Callout';\r\nimport { Selection, SelectionZone, SelectionMode } from '../../utilities/selection/index';\r\nimport { Suggestions } from './Suggestions/Suggestions';\r\nimport { ISuggestionsProps } from './Suggestions/Suggestions.Props';\r\nimport { SuggestionsController } from './Suggestions/SuggestionsController';\r\nimport { IBasePickerProps } from './BasePicker.Props';\r\nimport { BaseAutoFill } from './AutoFill/BaseAutoFill';\r\nimport { IPickerItemProps } from './PickerItem.Props';\r\nimport { IPersonaProps } from '../Persona/Persona.Props';\r\nimport * as stylesImport from './BasePicker.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IBasePickerState {\r\n  items?: any;\r\n  suggestedDisplayValue?: string;\r\n  moreSuggestionsAvailable?: boolean;\r\n  isSearching?: boolean;\r\n  isMostRecentlyUsedVisible?: boolean;\r\n  suggestionsVisible?: boolean;\r\n  suggestionsLoading?: boolean;\r\n  isResultsFooterVisible?: boolean;\r\n}\r\n\r\nexport class BasePicker<T, P extends IBasePickerProps<T>> extends BaseComponent<P, IBasePickerState> {\r\n\r\n  protected selection: Selection;\r\n\r\n  protected root: HTMLElement;\r\n  protected input: BaseAutoFill;\r\n  protected focusZone: FocusZone;\r\n  protected suggestionElement: Suggestions<T>;\r\n\r\n  protected suggestionStore: SuggestionsController<T>;\r\n  protected SuggestionOfProperType = Suggestions as new (props: ISuggestionsProps<T>) => Suggestions<T>;\r\n  protected loadingTimer: number;\r\n  protected currentPromise: PromiseLike<any>;\r\n\r\n  constructor(basePickerProps: P) {\r\n    super(basePickerProps);\r\n\r\n    let items: T[] = basePickerProps.defaultSelectedItems || [];\r\n\r\n    this.suggestionStore = new SuggestionsController<T>();\r\n    this.selection = new Selection({ onSelectionChanged: () => this.onSelectionChange() });\r\n    this.selection.setItems(items);\r\n    this.state = {\r\n      items: items,\r\n      suggestedDisplayValue: '',\r\n      isMostRecentlyUsedVisible: false,\r\n      moreSuggestionsAvailable: false,\r\n      isSearching: false\r\n    };\r\n  }\r\n\r\n  public get items(): T[] {\r\n    return this.state.items;\r\n  }\r\n\r\n  public componentWillUpdate(newProps: P, newState: IBasePickerState) {\r\n    if (newState.items && newState.items !== this.state.items) {\r\n      this.selection.setItems(newState.items);\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.selection.setItems(this.state.items);\r\n  }\r\n\r\n  public focus() {\r\n    this.focusZone.focus();\r\n  }\r\n\r\n  @autobind\r\n  public dismissSuggestions() {\r\n    this.setState({ suggestionsVisible: false });\r\n  }\r\n\r\n  public completeSuggestion() {\r\n    if (this.suggestionStore.hasSelectedSuggestion()) {\r\n      this.addItem(this.suggestionStore.currentSuggestion.item);\r\n      this.updateValue('');\r\n      this.input.clear();\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let { suggestedDisplayValue } = this.state;\r\n    let {\r\n      className,\r\n      inputProps,\r\n      disabled\r\n    } = this.props;\r\n    return (\r\n      <div\r\n        ref={ this._resolveRef('root') }\r\n        className={ css(\r\n          'ms-BasePicker',\r\n          className ? className : '') }\r\n        onKeyDown={ this.onKeyDown }\r\n        onBlur={ this.onBlur } >\r\n        <FocusZone\r\n          ref={ this._resolveRef('focusZone') }\r\n          direction={ FocusZoneDirection.bidirectional }\r\n          isInnerZoneKeystroke={ this._isFocusZoneInnerKeystroke }>\r\n          <SelectionZone selection={ this.selection } selectionMode={ SelectionMode.multiple }>\r\n            <div className={ css('ms-BasePicker-text', styles.pickerText) }>\r\n              { this.renderItems() }\r\n              <BaseAutoFill\r\n                { ...inputProps as any }\r\n                className={ css('ms-BasePicker-input', styles.pickerInput) }\r\n                ref={ this._resolveRef('input') }\r\n                onFocus={ this.onInputFocus }\r\n                onInputValueChange={ this.onInputChange }\r\n                suggestedDisplayValue={ suggestedDisplayValue }\r\n                aria-activedescendant={ 'sug-' + this.suggestionStore.currentIndex }\r\n                aria-owns='suggestion-list'\r\n                aria-expanded='true'\r\n                aria-haspopup='true'\r\n                autoCapitalize='off'\r\n                autoComplete='off'\r\n                role='combobox'\r\n                disabled={ disabled }\r\n              />\r\n            </div>\r\n          </SelectionZone>\r\n        </FocusZone>\r\n        { this.renderSuggestions() }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  protected renderSuggestions(): JSX.Element {\r\n    let TypedSuggestion = this.SuggestionOfProperType;\r\n    return this.state.suggestionsVisible ? (\r\n      <Callout\r\n        isBeakVisible={ false }\r\n        gapSpace={ 5 }\r\n        targetElement={ this.input.inputElement }\r\n        onDismiss={ this.dismissSuggestions }\r\n        directionalHint={ getRTL() ? DirectionalHint.bottomRightEdge : DirectionalHint.bottomLeftEdge }>\r\n        <TypedSuggestion\r\n          onRenderSuggestion={ this.props.onRenderSuggestionsItem }\r\n          onSuggestionClick={ this.onSuggestionClick }\r\n          onSuggestionRemove={ this.onSuggestionRemove }\r\n          suggestions={ this.suggestionStore.getSuggestions() }\r\n          ref={ this._resolveRef('suggestionElement') }\r\n          onGetMoreResults={ this.onGetMoreResults }\r\n          moreSuggestionsAvailable={ this.state.moreSuggestionsAvailable }\r\n          isLoading={ this.state.suggestionsLoading }\r\n          isSearching={ this.state.isSearching }\r\n          isMostRecentlyUsedVisible={ this.state.isMostRecentlyUsedVisible }\r\n          isResultsFooterVisible={ this.state.isResultsFooterVisible }\r\n          { ...this.props.pickerSuggestionsProps as any }\r\n        />\r\n      </Callout>\r\n    ) : (null);\r\n  }\r\n\r\n  protected renderItems(): JSX.Element[] {\r\n    let { onRenderItem } = this.props;\r\n    let { items } = this.state;\r\n    return items.map((item: any, index: number) => onRenderItem({\r\n      item,\r\n      index,\r\n      key: item.key ? item.key : index,\r\n      selected: this.selection.isIndexSelected(index),\r\n      onRemoveItem: () => this.removeItem(item),\r\n      onItemChange: this.onItemChange\r\n    }));\r\n  }\r\n\r\n  protected resetFocus(index: number) {\r\n    let { items } = this.state;\r\n\r\n    if (items.length) {\r\n      let newEl: HTMLElement = this.root.querySelectorAll('[data-selection-index]')[Math.min(index, items.length - 1)] as HTMLElement;\r\n\r\n      if (newEl) {\r\n        this.focusZone.focusElement(newEl);\r\n      }\r\n    } else {\r\n      this.input.focus();\r\n    }\r\n  }\r\n\r\n  protected onSuggestionSelect() {\r\n    if (this.suggestionStore.currentSuggestion) {\r\n      let currentValue: string = this.input.value;\r\n      let itemValue: string = this._getTextFromItem(this.suggestionStore.currentSuggestion.item, currentValue);\r\n      this.setState({ suggestedDisplayValue: itemValue });\r\n    }\r\n  }\r\n\r\n  protected onSelectionChange() {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  protected updateSuggestions(suggestions: any[]) {\r\n    this.suggestionStore.updateSuggestions(suggestions, 0);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  protected onEmptyInputFocus() {\r\n    let suggestions: T[] | PromiseLike<T[]> = this.props.onEmptyInputFocus(this.state.items);\r\n    this.updateSuggestionsList(suggestions);\r\n  }\r\n\r\n  protected updateValue(updatedValue: string) {\r\n    let suggestions: T[] | PromiseLike<T[]> = this.props.onResolveSuggestions(updatedValue, this.state.items);\r\n    this.updateSuggestionsList(suggestions, updatedValue);\r\n  }\r\n\r\n  protected updateSuggestionsList(suggestions: T[] | PromiseLike<T[]>, updatedValue?: string) {\r\n    let suggestionsArray: T[] = suggestions as T[];\r\n    let suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\r\n\r\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\r\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike. If it is then resolve it asynchronously.\r\n    if (Array.isArray(suggestionsArray)) {\r\n      if (updatedValue !== undefined) {\r\n        this.resolveNewValue(updatedValue, suggestionsArray);\r\n      } else {\r\n        this.suggestionStore.updateSuggestions(suggestionsArray);\r\n      }\r\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\r\n      if (!this.loadingTimer) {\r\n        this.loadingTimer = this._async.setTimeout(() => this.setState({\r\n          suggestionsLoading: true\r\n        }), 500);\r\n      }\r\n\r\n      // Clear suggestions\r\n      this.suggestionStore.updateSuggestions([]);\r\n\r\n      if (updatedValue !== undefined) {\r\n        this.setState({\r\n          suggestionsVisible: this.input.value !== '' && this.input.inputElement === document.activeElement\r\n        });\r\n      } else {\r\n        this.setState({\r\n          suggestionsVisible: this.input.inputElement === document.activeElement\r\n        });\r\n      }\r\n\r\n      // Ensure that the promise will only use the callback if it was the most recent one.\r\n      let promise: PromiseLike<T[]> = this.currentPromise = suggestionsPromiseLike;\r\n      promise.then((newSuggestions: T[]) => {\r\n        if (promise === this.currentPromise) {\r\n          if (updatedValue !== undefined) {\r\n            this.resolveNewValue(updatedValue, newSuggestions);\r\n          } else {\r\n            this.suggestionStore.updateSuggestions(newSuggestions);\r\n            this.setState({\r\n              suggestionsLoading: false\r\n            });\r\n          }\r\n          if (this.loadingTimer) {\r\n            this._async.clearTimeout(this.loadingTimer);\r\n            this.loadingTimer = undefined;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  protected resolveNewValue(updatedValue: string, suggestions: T[]) {\r\n    this.suggestionStore.updateSuggestions(suggestions, 0);\r\n    let itemValue: string = undefined;\r\n\r\n    if (this.suggestionStore.currentSuggestion) {\r\n      itemValue = this._getTextFromItem(this.suggestionStore.currentSuggestion.item, updatedValue);\r\n    }\r\n\r\n    this.setState({\r\n      suggestionsLoading: false,\r\n      suggestedDisplayValue: itemValue,\r\n      suggestionsVisible: this.input.value !== '' && this.input.inputElement === document.activeElement\r\n    });\r\n\r\n    /**\r\n     * If user exits the input box before suggestions are returned,\r\n     * select the first result upon promise resolution, if a suggestion\r\n     * is available.\r\n     */\r\n    if (this.suggestionStore.hasSelectedSuggestion() &&\r\n      this.input.inputElement !== document.activeElement) {\r\n      this.addItemByIndex(0);\r\n    }\r\n  }\r\n\r\n  protected onChange() {\r\n    if (this.props.onChange) {\r\n      this.props.onChange(this.state.items);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Select the first suggestion if one is available when user leaves\r\n   * the input area.\r\n   */\r\n  @autobind\r\n  protected onBlur() {\r\n    if (this.suggestionStore.hasSelectedSuggestion()) {\r\n      this.addItemByIndex(0);\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  protected onInputChange(value: string) {\r\n    this.updateValue(value);\r\n    this.setState({\r\n      moreSuggestionsAvailable: true,\r\n      isMostRecentlyUsedVisible: false\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  protected onSuggestionClick(ev: React.MouseEvent<HTMLElement>, item: any, index: number) {\r\n    this.addItemByIndex(index);\r\n  }\r\n\r\n  @autobind\r\n  protected onSuggestionRemove(ev: React.MouseEvent<HTMLElement>, item: IPersonaProps, index: number) {\r\n    if (this.props.onRemoveSuggestion) {\r\n      this.props.onRemoveSuggestion(item);\r\n    }\r\n    this.suggestionStore.removeSuggestion(index);\r\n  }\r\n\r\n  @autobind\r\n  protected onInputFocus(ev: React.FocusEvent<HTMLInputElement | BaseAutoFill>) {\r\n    this.selection.setAllSelected(false);\r\n    if (this.input.value === '' && this.props.onEmptyInputFocus) {\r\n      this.onEmptyInputFocus();\r\n      this.setState({\r\n        isMostRecentlyUsedVisible: true,\r\n        moreSuggestionsAvailable: false,\r\n        suggestionsVisible: true\r\n      });\r\n    } else if (this.input.value) {\r\n      this.setState({\r\n        isMostRecentlyUsedVisible: false,\r\n        suggestionsVisible: true\r\n      });\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  protected onKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\r\n    let value = this.input.value;\r\n    switch (ev.which) {\r\n      case KeyCodes.escape:\r\n        if (this.state.suggestionsVisible) {\r\n          this.dismissSuggestions();\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.tab:\r\n      case KeyCodes.enter:\r\n        if (!ev.shiftKey && this.suggestionStore.hasSelectedSuggestion() && this.state.suggestionsVisible) {\r\n          this.completeSuggestion();\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n        }\r\n\r\n        break;\r\n\r\n      case KeyCodes.backspace:\r\n        this.onBackspace(ev);\r\n        break;\r\n\r\n      case KeyCodes.del:\r\n        if (ev.target === this.input.inputElement && this.state.suggestionsVisible && this.suggestionStore.currentIndex !== -1) {\r\n          if (this.props.onRemoveSuggestion) {\r\n            this.props.onRemoveSuggestion(this.suggestionStore.currentSuggestion.item);\r\n          }\r\n          this.suggestionStore.removeSuggestion(this.suggestionStore.currentIndex);\r\n          this.forceUpdate();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.up:\r\n        if (ev.target === this.input.inputElement && this.suggestionStore.previousSuggestion() && this.state.suggestionsVisible) {\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n          this.onSuggestionSelect();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.down:\r\n        if (ev.target === this.input.inputElement && this.state.suggestionsVisible) {\r\n          if (this.suggestionStore.nextSuggestion()) {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            this.onSuggestionSelect();\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  protected onItemChange(changedItem: T, index: number) {\r\n    let { items } = this.state;\r\n\r\n    if (index >= 0) {\r\n      let newItems: T[] = items;\r\n      newItems[index] = changedItem;\r\n\r\n      this.setState({ items: newItems }, () => this.onChange());\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  protected onGetMoreResults() {\r\n    this.setState({\r\n      isSearching: true\r\n    }, () => {\r\n      if (this.props.onGetMoreResults) {\r\n        let suggestions: T[] | PromiseLike<T[]> = this.props.onGetMoreResults(this.input.value, this.state.items);\r\n        let suggestionsArray: T[] = suggestions as T[];\r\n        let suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\r\n\r\n        if (Array.isArray(suggestionsArray)) {\r\n          this.updateSuggestions(suggestionsArray);\r\n          this.setState({ isSearching: false });\r\n        } else if (suggestionsPromiseLike.then) {\r\n          suggestionsPromiseLike.then((newSuggestions: T[]) => {\r\n            this.updateSuggestions(newSuggestions);\r\n            this.setState({ isSearching: false });\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({ isSearching: false });\r\n      }\r\n      this.input.focus();\r\n      this.setState({\r\n        moreSuggestionsAvailable: false,\r\n        isResultsFooterVisible: true\r\n      });\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  protected addItemByIndex(index: number): void {\r\n    this.addItem(this.suggestionStore.getSuggestionAtIndex(index).item);\r\n    this.input.clear();\r\n    this.updateValue('');\r\n  }\r\n\r\n  @autobind\r\n  protected addItem(item: T) {\r\n    let newItems: T[] = this.state.items.concat([item]);\r\n    this.setState({ items: newItems }, () => this.onChange());\r\n  }\r\n\r\n  @autobind\r\n  protected removeItem(item: IPickerItemProps<T>) {\r\n    let { items } = this.state;\r\n    let index: number = items.indexOf(item);\r\n\r\n    if (index >= 0) {\r\n      let newItems: T[] = items.slice(0, index).concat(items.slice(index + 1));\r\n      this.setState({ items: newItems }, () => this.onChange());\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  protected removeItems(itemsToRemove: any[]) {\r\n    let { items } = this.state;\r\n    let newItems: T[] = items.filter((item: any) => itemsToRemove.indexOf(item) === -1);\r\n    let firstItemToRemove = this.selection.getSelection()[0];\r\n    let index: number = items.indexOf(firstItemToRemove);\r\n\r\n    this.setState({ items: newItems }, () => {\r\n      this.resetFocus(index);\r\n      this.onChange();\r\n    });\r\n  }\r\n\r\n  // This is protected because we may expect the backspace key to work differently in a different kind of picker.\r\n  // This lets the subclass override it and provide it's own onBackspace. For an example see the BasePickerListBelow\r\n  protected onBackspace(ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (this.state.items.length && !this.input.isValueSelected && this.input.cursorLocation === 0) {\r\n      if (this.selection.getSelectedCount() > 0) {\r\n        this.removeItems(this.selection.getSelection());\r\n      } else {\r\n        this.removeItem(this.state.items[this.state.items.length - 1]);\r\n      }\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  protected _isFocusZoneInnerKeystroke(ev: React.KeyboardEvent<HTMLElement>): boolean {\r\n    // If suggestions are shown let up/down keys control them, otherwise allow them through to control the focusZone.\r\n    if (this.state.suggestionsVisible) {\r\n      switch (ev.which) {\r\n        case KeyCodes.up:\r\n        case KeyCodes.down:\r\n          return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _getTextFromItem(item: T, currentValue?: string): string {\r\n    if (this.props.getTextFromItem) {\r\n      return this.props.getTextFromItem(item, currentValue);\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n\r\nexport class BasePickerListBelow<T, P extends IBasePickerProps<T>> extends BasePicker<T, P> {\r\n  public render() {\r\n    let { suggestedDisplayValue } = this.state;\r\n    let {\r\n      className,\r\n      inputProps,\r\n      disabled\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div ref={ this._resolveRef('root') }\r\n          className={ css('ms-BasePicker', className ? className : '') }\r\n          onKeyDown={ this.onKeyDown }\r\n          onBlur={ this.onBlur } >\r\n          <SelectionZone selection={ this.selection }\r\n            selectionMode={ SelectionMode.multiple }>\r\n            <div className={ css('ms-BasePicker-text', styles.pickerText) }>\r\n              <BaseAutoFill\r\n                { ...inputProps as any }\r\n                className={ css('ms-BasePicker-input', styles.pickerInput) }\r\n                ref={ this._resolveRef('input') }\r\n                onFocus={ this.onInputFocus }\r\n                onInputValueChange={ this.onInputChange }\r\n                suggestedDisplayValue={ suggestedDisplayValue }\r\n                aria-activedescendant={ 'sug-' + this.suggestionStore.currentIndex }\r\n                aria-owns='suggestion-list'\r\n                aria-expanded='true'\r\n                aria-haspopup='true'\r\n                autoCapitalize='off'\r\n                autoComplete='off'\r\n                role='combobox'\r\n                disabled={ disabled }\r\n              />\r\n            </div>\r\n          </SelectionZone>\r\n        </div>\r\n        { this.renderSuggestions() }\r\n        <FocusZone ref={ this._resolveRef('focusZone') }\r\n          className='ms-BasePicker-selectedItems'\r\n          isCircularNavigation={ true }\r\n          direction={ FocusZoneDirection.bidirectional }\r\n          isInnerZoneKeystroke={ this._isFocusZoneInnerKeystroke } >\r\n          { this.renderItems() }\r\n        </FocusZone>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  protected onBackspace(ev: React.KeyboardEvent<HTMLElement>) {\r\n    // override the existing backspace method to not do anything because the list items appear below.\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}