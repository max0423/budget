{"version":3,"sources":["components/Button/DefaultButton/DefaultButton.tsx"],"names":[],"mappings":";;;IAQA,IAAa,aAAa;QAAS,yCAA+B;QADlE;YAAA,qEAmBC;YAjBC;;eAEG;YACO,+BAAyB,GAAG,KAAK,CAAC;;QAc9C,CAAC;QAZQ,8BAAM,GAAb;YACQ,IAAA,eAA8B,EAA5B,kBAAM,EAAE,gBAAK,CAAgB;YAErC,MAAM,CAAC,CACL,oBAAC,uBAAU,uBACJ,IAAI,CAAC,KAAK,IACf,gBAAgB,EAAC,oBAAoB,EACrC,MAAM,EAAG,gCAAS,CAAC,KAAK,EAAE,MAAM,CAAC,EACjC,mBAAmB,EAAG,sBAAU,IAChC,CACH,CAAC;QACJ,CAAC;QACH,oBAAC;IAAD,CAlBA,AAkBC,CAlBkC,yBAAa,GAkB/C;IAlBY,aAAa;QADzB,wBAAY,CAAC,CAAC,0BAAgB,CAAC,CAAC;OACpB,aAAa,CAkBzB;IAlBY,sCAAa","file":"components/Button/DefaultButton/DefaultButton.js","sourcesContent":["import * as React from 'react';\r\nimport { BaseButton } from '../BaseButton';\r\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\r\nimport { ThemeSettingName } from '../../../Styling';\r\nimport { IButtonProps } from '../Button.Props';\r\nimport { getStyles } from './DefaultButton.styles';\r\n\r\n@customizable([ThemeSettingName])\r\nexport class DefaultButton extends BaseComponent<IButtonProps, {}> {\r\n  /**\r\n   * Tell BaseComponent to bypass resolution of componentRef.\r\n   */\r\n  protected _shouldUpdateComponentRef = false;\r\n\r\n  public render() {\r\n    const { styles, theme } = this.props;\r\n\r\n    return (\r\n      <BaseButton\r\n        { ...this.props }\r\n        variantClassName='ms-Button--default'\r\n        styles={ getStyles(theme, styles) }\r\n        onRenderDescription={ nullRender }\r\n      />\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}