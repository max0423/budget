{"version":3,"sources":["components/ResizeGroup/examples/ResizeGroup.OverflowSet.Example.tsx"],"names":[],"mappings":";;;IAUA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAQjC,sBAAsB,KAAa,EAAE,cAAuB,EAAE,OAAgB;QAC5E,IAAM,KAAK,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QACzC,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;YAC3C,IAAI,IAAI,GAAG;gBACT,GAAG,EAAE,SAAO,KAAO;gBACnB,IAAI,EAAE,UAAQ,KAAO;gBACrB,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;gBACjC,OAAO,EAAE,OAAO;aACjB,CAAC;YAEF,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC;YAC/B,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC;QAED,IAAI,MAAM,GAAG;YACX,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,EAAW;SACtB,CAAC;QAEF,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACnB,MAAM,wBAAQ,MAAM,IAAE,QAAQ,UAAA,GAAE,CAAC;QACnC,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IASD,yBAAyB,eAAsC;QAC7D,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,OAAO,IAAK,OAAA,GAAG,GAAG,OAAO,CAAC,GAAG,EAAjB,CAAiB,EAAE,EAAE,CAAC,CAAC;IACzE,CAAC;IAED;QAAmD,yDAAsD;QAEvG,uCAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAOb;YANC,KAAI,CAAC,KAAK,GAAG;gBACX,KAAK,EAAE,KAAK;gBACZ,cAAc,EAAE,KAAK;gBACrB,cAAc,EAAE,KAAK;gBACrB,aAAa,EAAE,EAAE;aAClB,CAAC;;QACJ,CAAC;QAEM,8CAAM,GAAb;YACM,IAAA,eAAqE,EAAnE,gCAAa,EAAE,kCAAc,EAAE,kCAAc,EAAE,gBAAK,CAAgB;YAC1E,IAAI,YAAY,GAAG,YAAY,CAAC,aAAa,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;YAC/E,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,KAAK,GAAG,MAAM,CAAC,aAAa,GAAG,YAAY;gBAC1D,oBAAC,yBAAW,IACV,IAAI,EAAG,YAAY,EACnB,YAAY,EAAG,UAAC,WAAW;wBACzB,EAAE,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;4BACrC,MAAM,CAAC,SAAS,CAAC;wBACnB,CAAC;wBAED,IAAI,QAAQ,GAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAK,WAAW,CAAC,QAAQ,CAAC,CAAC;wBAC3E,IAAI,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBAE/C,IAAI,QAAQ,GAAG,SAAS,CAAC;wBACzB,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;4BACnB,QAAQ,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC;wBACtC,CAAC;wBACD,MAAM,CAAC,EAAE,OAAO,SAAA,EAAE,QAAQ,UAAA,EAAE,QAAQ,UAAA,EAAE,CAAC;oBACzC,CAAC,EACD,YAAY,EAAG,UAAC,IAAI;wBAClB,MAAM,CAAC,CACL,oBAAC,yBAAW,IACV,KAAK,EAAG,IAAI,CAAC,OAAO,EACpB,aAAa,EAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,EAC3D,YAAY,EAAG,UAAC,IAAI;gCAClB,MAAM,CAAC,CACL,oBAAC,sBAAa,IACZ,IAAI,EAAG,IAAI,CAAC,IAAI,EAChB,SAAS,EAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,EACnC,OAAO,EAAG,IAAI,CAAC,OAAO,EACtB,OAAO,EAAG,IAAI,CAAC,OAAO,GACtB,CACH,CAAC;4BACJ,CAAC,EACD,sBAAsB,EAAG,UAAC,aAAa;gCACrC,MAAM,CAAC,CACL,oBAAC,sBAAa,IACZ,SAAS,EAAG,EAAE,KAAK,EAAE,aAAa,EAAE,GACpC,CACH,CAAC;4BACJ,CAAC,GACD,CACH,CAAC;oBACJ,CAAC,GACD;gBACF,6BAAK,SAAS,EAAG,MAAM,CAAC,aAAa;oBACnC,oBAAC,mBAAQ,IAAC,KAAK,EAAC,gBAAgB,EAAC,QAAQ,EAAG,IAAI,CAAC,uBAAuB,EAAG,OAAO,EAAG,cAAc,GAAK;oBACxG,oBAAC,mBAAQ,IAAC,KAAK,EAAC,iBAAiB,EAAC,QAAQ,EAAG,IAAI,CAAC,uBAAuB,EAAG,OAAO,EAAG,cAAc,GAAK;oBACzG,6BAAK,SAAS,EAAG,MAAM,CAAC,iBAAiB;wBACvC,oBAAC,mBAAQ,IACP,KAAK,EAAC,2BAA2B,EACjC,WAAW,EAAG,aAAa,CAAC,QAAQ,EAAE,EACtC,SAAS,EAAG,IAAI,CAAC,sBAAsB,EACvC,OAAO,EACL,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;gCAC1B,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;gCACzB,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;gCACzB,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;gCACzB,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;gCACzB,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gCAC3B,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,GAAK,CACjC,CACF,CACF,CACP,CAAC;QACJ,CAAC;QAGO,+DAAuB,GAA/B,UAAgC,CAAkD,EAAE,OAAgB;YAClG,IAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC,CAAC;QAC7C,CAAC;QAGO,+DAAuB,GAA/B,UAAgC,CAAkD,EAAE,OAAgB;YAClG,IAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC,CAAC;QAC7C,CAAC;QAGO,8DAAsB,GAA9B,UAA+B,MAAuB;YACpD,IAAI,CAAC,QAAQ,CAAC,EAAE,aAAa,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9D,CAAC;QACH,oCAAC;IAAD,CA/FA,AA+FC,CA/FkD,yBAAa,GA+F/D;IAbC;QADC,oBAAQ;gFAGR;IAGD;QADC,oBAAQ;gFAGR;IAGD;QADC,oBAAQ;+EAGR;IA9FU,sEAA6B","file":"components/ResizeGroup/examples/ResizeGroup.OverflowSet.Example.js","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, autobind } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { DefaultButton, PrimaryButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { ResizeGroup } from 'office-ui-fabric-react/lib/ResizeGroup';\r\nimport { OverflowSet } from '../../OverflowSet';\r\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { IContextualMenuItem } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\n\r\nimport * as stylesImport from './ResizeGroup.Example.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IOverflowData {\r\n  primary: IContextualMenuItem[];\r\n  overflow: IContextualMenuItem[];\r\n  cacheKey?: string;\r\n}\r\n\r\nfunction generateData(count: number, cachingEnabled: boolean, checked: boolean): IOverflowData {\r\n  const icons = ['Add', 'Share', 'Upload'];\r\n  let dataItems = [];\r\n  let cacheKey = '';\r\n  for (let index = 0; index < count; index++) {\r\n    let item = {\r\n      key: `item${index}`,\r\n      name: `Item ${index}`,\r\n      icon: icons[index % icons.length],\r\n      checked: checked\r\n    };\r\n\r\n    cacheKey = cacheKey + item.key;\r\n    dataItems.push(item);\r\n  }\r\n\r\n  let result = {\r\n    primary: dataItems,\r\n    overflow: [] as any[]\r\n  };\r\n\r\n  if (cachingEnabled) {\r\n    result = { ...result, cacheKey };\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport interface IResizeGroupOverflowSetExampleState {\r\n  short: boolean;\r\n  numberOfItems: number;\r\n  buttonsChecked: boolean;\r\n  cachingEnabled: boolean;\r\n}\r\n\r\nfunction computeCacheKey(primaryControls: IContextualMenuItem[]): string {\r\n  return primaryControls.reduce((acc, current) => acc + current.key, '');\r\n}\r\n\r\nexport class ResizeGroupOverflowSetExample extends BaseComponent<{}, IResizeGroupOverflowSetExampleState> {\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      short: false,\r\n      buttonsChecked: false,\r\n      cachingEnabled: false,\r\n      numberOfItems: 20\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { numberOfItems, cachingEnabled, buttonsChecked, short } = this.state;\r\n    let dataToRender = generateData(numberOfItems, cachingEnabled, buttonsChecked);\r\n    return (\r\n      <div className={ short ? styles.resizeIsShort : 'notResized' }>\r\n        <ResizeGroup\r\n          data={ dataToRender }\r\n          onReduceData={ (currentData) => {\r\n            if (currentData.primary.length === 0) {\r\n              return undefined;\r\n            }\r\n\r\n            let overflow = [...currentData.primary.slice(-1), ...currentData.overflow];\r\n            let primary = currentData.primary.slice(0, -1);\r\n\r\n            let cacheKey = undefined;\r\n            if (cachingEnabled) {\r\n              cacheKey = computeCacheKey(primary);\r\n            }\r\n            return { primary, overflow, cacheKey };\r\n          } }\r\n          onRenderData={ (data) => {\r\n            return (\r\n              <OverflowSet\r\n                items={ data.primary }\r\n                overflowItems={ data.overflow.length ? data.overflow : null }\r\n                onRenderItem={ (item) => {\r\n                  return (\r\n                    <DefaultButton\r\n                      text={ item.name }\r\n                      iconProps={ { iconName: item.icon } }\r\n                      onClick={ item.onClick }\r\n                      checked={ item.checked }\r\n                    />\r\n                  );\r\n                } }\r\n                onRenderOverflowButton={ (overflowItems) => {\r\n                  return (\r\n                    <DefaultButton\r\n                      menuProps={ { items: overflowItems } }\r\n                    />\r\n                  );\r\n                } }\r\n              />\r\n            );\r\n          } }\r\n        />\r\n        <div className={ styles.settingsGroup }>\r\n          <Checkbox label='Enable caching' onChange={ this.onCachingEnabledChanged } checked={ cachingEnabled } />\r\n          <Checkbox label='Buttons checked' onChange={ this.onButtonsCheckedChanged } checked={ buttonsChecked } />\r\n          <div className={ styles.itemCountDropdown } >\r\n            <Dropdown\r\n              label='Number of items to render'\r\n              selectedKey={ numberOfItems.toString() }\r\n              onChanged={ this.onNumberOfItemsChanged }\r\n              options={\r\n                [{ key: '20', text: '20' },\r\n                { key: '30', text: '30' },\r\n                { key: '40', text: '40' },\r\n                { key: '50', text: '50' },\r\n                { key: '75', text: '75' },\r\n                { key: '100', text: '100' },\r\n                { key: '200', text: '200' }] } />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private onCachingEnabledChanged(_: React.FormEvent<HTMLElement | HTMLInputElement>, checked: boolean) {\r\n    this.setState({ cachingEnabled: checked });\r\n  }\r\n\r\n  @autobind\r\n  private onButtonsCheckedChanged(_: React.FormEvent<HTMLElement | HTMLInputElement>, checked: boolean) {\r\n    this.setState({ buttonsChecked: checked });\r\n  }\r\n\r\n  @autobind\r\n  private onNumberOfItemsChanged(option: IDropdownOption) {\r\n    this.setState({ numberOfItems: parseInt(option.text, 10) });\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}