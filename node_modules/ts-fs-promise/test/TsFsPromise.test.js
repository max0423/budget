/// <reference path="../typings/tsd.d.ts" />
var fsPromise = require('../index');
var fs = require('fs');
var expect = require('expect.js');
var getPath = function (path) {
    return ('./test/' + path.replace('./', '')).replace(/\/\//g, '/');
};
try {
    fs.mkdirSync(getPath('test'));
}
catch (e) {
    console.log(e);
}
try {
    fs.writeFileSync(getPath('test/test.text'), 'test');
}
catch (e) {
    console.log(e);
}
describe('ts-fs-promise', function () {
    it('copySync', function () {
        var ok;
        fsPromise.copySync(getPath('test/test.text'), getPath('test.text'));
        ok = (fs.readFileSync(getPath('test.text'), 'utf8') == 'test');
        expect(ok).to.be(true);
        fs.unlinkSync(getPath('test.text'));
    });
    it('mkdirsSync', function () {
        var ok;
        fsPromise.mkdirsSync(getPath('some'));
        ok = fs.existsSync(getPath('some'));
        expect(ok).to.be(true);
        fs.rmdir(getPath('some'));
    });
    it('createFileSync', function () {
        var ok;
        fsPromise.createFileSync(getPath('test.text'));
        ok = fs.existsSync(getPath('test.text'));
        expect(ok).to.be(true);
        fs.unlinkSync(getPath('test.text'));
    });
    it('copy', function (done) {
        var ok = false;
        fsPromise.copy(getPath('test/test.text'), getPath('test.text')).then(function (status) {
            ok = (status && fs.readFileSync(getPath('test.text'), 'utf8') == 'test');
            expect(ok).to.be(true);
            fs.unlinkSync(getPath('test.text'));
            done();
        });
    });
    it('createFile', function (done) {
        var ok = false;
        fsPromise.createFile(getPath('test.text')).then(function (status) {
            ok = (status && fs.existsSync(getPath('test.text')));
            expect(ok).to.be(true);
            fs.unlinkSync(getPath('test.text'));
            done();
        });
    });
    it('mkdirs', function (done) {
        var ok = false;
        fsPromise.mkdirs(getPath('some')).then(function (status) {
            ok = (status && fs.existsSync(getPath('some')));
            expect(ok).to.be(true);
            fs.rmdir(getPath('some'));
            done();
        });
    });
});
//# sourceMappingURL=TsFsPromise.test.js.map