{"version":3,"sources":["styles/theme.ts"],"names":[],"mappings":";;;IAeA,IAAI,MAAM,GAAW;QACnB,OAAO,EAAE,+BAAc;QACvB,cAAc,EAAE,8BAA8B,CAAC,+BAAc,CAAC;QAC9D,KAAK,EAAE,qCAAiB;KACzB,CAAC;IAEW,QAAA,gBAAgB,GAAG,OAAO,CAAC;IAExC,IAAI,GAAG,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,GAAG,SAAS,CAAC;IAE7D,0CAA0C;IAC1C,EAAE,CAAC,CAAC,GAAG,IAAK,GAAW,CAAC,cAAc,CAAC,IAAK,GAAW,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9E,MAAM,GAAG,WAAW,CAAE,GAAW,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC;IAC3D,CAAC;IACD,yCAAyC;IAEzC,yBAAyB;IACzB,+BAAc,CAAC,QAAQ,CAAC,wBAAgB,EAAE,MAAM,CAAC,CAAC;IAElD;;OAEG;IACH;QACE,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAFD,4BAEC;IAED;;OAEG;IACH,mBAA0B,KAAoB;QAC5C,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;QAE5B,0CAA0C;QAC1C,8BAAe,CAAC,MAAM,CAAC,OAAa,CAAC,CAAC;QAEtC,+BAAc,CAAC,QAAQ,CAAC,wBAAgB,EAAE,MAAM,CAAC,CAAC;QAElD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IATD,8BASC;IAED;;OAEG;IACH,qBAA4B,KAAoB;QAC9C,IAAI,UAAU,wBAAQ,+BAAc,EAAK,KAAK,CAAC,OAAO,CAAE,CAAC;QAEzD,MAAM,CAAC;YACL,OAAO,EAAE,UAAU;YACnB,KAAK,uBACA,qCAAiB,EACjB,KAAK,CAAC,KAAK,CACf;YACD,cAAc,uBAAO,8BAA8B,CAAC,UAAU,CAAC,EAAK,KAAK,CAAC,cAAc,CAAE;SACjF,CAAC;IACd,CAAC;IAXD,kCAWC;IAED,sEAAsE;IACtE,2FAA2F;IAC3F,wCAAwC,CAAW;QACjD,MAAM,CAAC;YACL,cAAc,EAAE,CAAC,CAAC,KAAK;YACvB,QAAQ,EAAE,CAAC,CAAC,cAAc;YAC1B,WAAW,EAAE,CAAC,CAAC,gBAAgB;YAC/B,WAAW,EAAE,CAAC,CAAC,YAAY;YAE3B,kBAAkB,EAAE,CAAC,CAAC,cAAc;YACpC,YAAY,EAAE,CAAC,CAAC,kBAAkB;YAClC,eAAe,EAAE,CAAC,CAAC,iBAAiB;YAEpC,WAAW,EAAE,CAAC,CAAC,KAAK;YAEpB,eAAe,EAAE,SAAS;YAC1B,SAAS,EAAE,CAAC,CAAC,OAAO;YAEpB,WAAW,EAAE,CAAC,CAAC,eAAe;YAC9B,kBAAkB,EAAE,CAAC,CAAC,cAAc;YACpC,sBAAsB,EAAE,CAAC,CAAC,YAAY;YACtC,6BAA6B,EAAE,CAAC,CAAC,YAAY;YAC7C,sBAAsB,EAAE,CAAC,CAAC,KAAK;YAC/B,mBAAmB,EAAE,CAAC,CAAC,YAAY;YAEnC,yBAAyB,EAAE,CAAC,CAAC,cAAc;YAC3C,yBAAyB,EAAE,CAAC,CAAC,oBAAoB;YACjD,QAAQ,EAAE,CAAC,CAAC,YAAY;YACxB,UAAU,EAAE,CAAC,CAAC,YAAY;YAE1B,cAAc,EAAE,CAAC,CAAC,KAAK;YACvB,aAAa,EAAE,CAAC,CAAC,cAAc;YAC/B,yBAAyB,EAAE,CAAC,CAAC,cAAc;YAC3C,yBAAyB,EAAE,CAAC,CAAC,iBAAiB;YAC9C,gCAAgC,EAAE,CAAC,CAAC,oBAAoB;SACzD,CAAC;IACJ,CAAC","file":"styles/theme.js","sourcesContent":["import { GlobalSettings } from '@uifabric/utilities/lib/GlobalSettings';\r\nimport {\r\n  IPalette,\r\n  ISemanticColors,\r\n  ITheme,\r\n  IPartialTheme\r\n} from '../interfaces/index';\r\nimport {\r\n  DefaultFontStyles\r\n} from './DefaultFontStyles';\r\nimport {\r\n  DefaultPalette\r\n} from './DefaultPalette';\r\nimport { loadTheme as legacyLoadTheme } from '@microsoft/load-themed-styles';\r\n\r\nlet _theme: ITheme = {\r\n  palette: DefaultPalette,\r\n  semanticColors: _makeSemanticColorsFromPalette(DefaultPalette),\r\n  fonts: DefaultFontStyles\r\n};\r\n\r\nexport const ThemeSettingName = 'theme';\r\n\r\nlet win = typeof window !== 'undefined' ? window : undefined;\r\n\r\n// tslint:disable:no-string-literal no-any\r\nif (win && (win as any)['FabricConfig'] && (win as any)['FabricConfig'].theme) {\r\n  _theme = createTheme((win as any)['FabricConfig'].theme);\r\n}\r\n// tslint:enable:no-string-literal no-any\r\n\r\n// Set the default theme.\r\nGlobalSettings.setValue(ThemeSettingName, _theme);\r\n\r\n/**\r\n * Gets the theme object.\r\n */\r\nexport function getTheme(): ITheme {\r\n  return _theme;\r\n}\r\n\r\n/**\r\n * Applies the theme, while filling in missing slots.\r\n */\r\nexport function loadTheme(theme: IPartialTheme): ITheme {\r\n  _theme = createTheme(theme);\r\n\r\n  // Load the legacy theme from the palette.\r\n  legacyLoadTheme(_theme.palette as {});\r\n\r\n  GlobalSettings.setValue(ThemeSettingName, _theme);\r\n\r\n  return _theme;\r\n}\r\n\r\n/**\r\n * Creates a custom theme definition which can be used with the Customizer.\r\n */\r\nexport function createTheme(theme: IPartialTheme): ITheme {\r\n  let newPalette = { ...DefaultPalette, ...theme.palette };\r\n\r\n  return {\r\n    palette: newPalette,\r\n    fonts: {\r\n      ...DefaultFontStyles,\r\n      ...theme.fonts\r\n    },\r\n    semanticColors: { ..._makeSemanticColorsFromPalette(newPalette), ...theme.semanticColors }\r\n  } as ITheme;\r\n}\r\n\r\n// Generates all the semantic slot colors based on the Fabric palette.\r\n// We'll use these as fallbacks for semantic slots that the passed in theme did not define.\r\nfunction _makeSemanticColorsFromPalette(p: IPalette): ISemanticColors {\r\n  return {\r\n    bodyBackground: p.white,\r\n    bodyText: p.neutralPrimary,\r\n    bodySubtext: p.neutralSecondary,\r\n    bodyDivider: p.neutralLight,\r\n\r\n    disabledBackground: p.neutralLighter,\r\n    disabledText: p.neutralTertiaryAlt,\r\n    disabledSubtext: p.neutralQuaternary,\r\n\r\n    focusBorder: p.black,\r\n\r\n    errorBackground: '#fde7e9',\r\n    errorText: p.redDark,\r\n\r\n    inputBorder: p.neutralTertiary,\r\n    inputBorderHovered: p.neutralPrimary,\r\n    inputBackgroundChecked: p.themePrimary,\r\n    inputBackgroundCheckedHovered: p.themeDarkAlt,\r\n    inputForegroundChecked: p.white,\r\n    inputFocusBorderAlt: p.themePrimary,\r\n\r\n    menuItemBackgroundHovered: p.neutralLighter,\r\n    menuItemBackgroundChecked: p.neutralQuaternaryAlt,\r\n    menuIcon: p.themePrimary,\r\n    menuHeader: p.themePrimary,\r\n\r\n    listBackground: p.white,\r\n    listTextColor: p.neutralPrimary,\r\n    listItemBackgroundHovered: p.neutralLighter,\r\n    listItemBackgroundChecked: p.neutralQuaternary,\r\n    listItemBackgroundCheckedHovered: p.neutralQuaternaryAlt\r\n  };\r\n}\r\n"],"sourceRoot":"..\\..\\src"}