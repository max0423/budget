{"version":3,"sources":["examples/AnimationTile/AnimationTile.tsx"],"names":[],"mappings":";;;IAkBA;QAAmC,yCAAuD;QACxF,uBAAY,KAA0B;YAAtC,YACE,kBAAM,KAAK,CAAC,SAKb;YAyCO,cAAQ,GAAG;gBACjB,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;gBACrC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC;oBACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;gBACxC,CAAC,EAAE,IAAI,CAAC,CAAC;YACX,CAAC,CAAA;YAjDC,KAAI,CAAC,KAAK,GAAG;gBACX,WAAW,EAAE,KAAK;aACnB,CAAC;;QACJ,CAAC;QAEM,8BAAM,GAAb;YACE,IAAM,MAAM,GAAyB,gCAAS,EAAE,CAAC;YACjD,IAAM,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACrC,IAAM,IAAI,GAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAM,SAAS,GAAkB,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;YAC3D,IAAI,gBAAwB,CAAC;YAE7B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9B,gBAAgB,GAAG,IAAI,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;YAC3D,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACtC,gBAAgB,GAAG,IAAI,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC;YAC3D,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnC,gBAAgB,GAAG,IAAI,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC;YAC3D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,gBAAgB,GAAG,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC;YAC3D,CAAC;YAED,IAAI,kBAAkB,GAAkB,IAAI,CAAC,KAAK,CAAC,WAAW;kBAEzD,6BAA2B,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;kBAC7C,IAAI,CAAC;YAET,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,MAAM,CAAC,IAAc,EAAG,OAAO,EAAG,IAAI,CAAC,QAAQ;gBAC9D,6BAAK,SAAS,EAAG,MAAM,CAAC,KAAe,IAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAQ;gBACnE,6BAAK,SAAS,EAAG,MAAM,CAAC,SAAmB;oBACzC,6BACE,SAAS,EAAG,qBAAW,CACrB,MAAM,CAAC,YAAY,EACnB,gBAAgB,EAChB,SAAS,EACT,kBAAkB,CACT,GACX,CACE,CACF,CACP,CAAC;QACJ,CAAC;QASH,oBAAC;IAAD,CAvDA,AAuDC,CAvDkC,yBAAa,GAuD/C;IAvDY,sCAAa","file":"examples/AnimationTile/AnimationTile.js","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent } from '@uifabric/utilities';\r\nimport {\r\n  AnimationClassNames,\r\n  IStyle,\r\n  mergeStyles\r\n} from '@uifabric/styling';\r\nimport { IAnimationTileStyles, getStyles } from './AnimationTile.styles';\r\n\r\nexport interface IAnimationTileProps {\r\n  componentRef?: () => void;\r\n  name: string;\r\n}\r\n\r\nexport interface IAnimationTileState {\r\n  isAnimating: boolean;\r\n}\r\n\r\nexport class AnimationTile extends BaseComponent<IAnimationTileProps, IAnimationTileState> {\r\n  constructor(props: IAnimationTileProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isAnimating: false\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const styles: IAnimationTileStyles = getStyles();\r\n    const name: string = this.props.name;\r\n    const isIn: boolean = name.indexOf('In') >= 0;\r\n    const isInStyle: IStyle | null = isIn ? styles.isIn : null;\r\n    let positioningStyle: IStyle;\r\n\r\n    if (name.indexOf('Left') >= 0) {\r\n      positioningStyle = isIn ? styles.isRight : styles.isLeft;\r\n    } else if (name.indexOf('Right') >= 0) {\r\n      positioningStyle = isIn ? styles.isLeft : styles.isRight;\r\n    } else if (name.indexOf('Up') >= 0) {\r\n      positioningStyle = isIn ? styles.isBottom : styles.isTop;\r\n    } else {\r\n      positioningStyle = isIn ? styles.isTop : styles.isBottom;\r\n    }\r\n\r\n    let animationClassName: string | null = this.state.isAnimating\r\n      // tslint:disable-next-line:no-any\r\n      ? (AnimationClassNames as any)[this.props.name]\r\n      : null;\r\n\r\n    return (\r\n      <div className={ styles.root as string } onClick={ this._onClick }>\r\n        <div className={ styles.title as string }>{ this.props.name }</div>\r\n        <div className={ styles.container as string }>\r\n          <div\r\n            className={ mergeStyles(\r\n              styles.animationBox,\r\n              positioningStyle,\r\n              isInStyle,\r\n              animationClassName\r\n            ) as string }\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onClick = (): void => {\r\n    this.setState({ isAnimating: true });\r\n    this._async.setTimeout(() => {\r\n      this.setState({ isAnimating: false });\r\n    }, 2000);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}