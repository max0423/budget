define(["require", "exports", "tslib", "react", "@uifabric/utilities", "@uifabric/styling", "./AnimationTile.styles"], function (require, exports, tslib_1, React, utilities_1, styling_1, AnimationTile_styles_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var AnimationTile = (function (_super) {
        tslib_1.__extends(AnimationTile, _super);
        function AnimationTile(props) {
            var _this = _super.call(this, props) || this;
            _this._onClick = function () {
                _this.setState({ isAnimating: true });
                _this._async.setTimeout(function () {
                    _this.setState({ isAnimating: false });
                }, 2000);
            };
            _this.state = {
                isAnimating: false
            };
            return _this;
        }
        AnimationTile.prototype.render = function () {
            var styles = AnimationTile_styles_1.getStyles();
            var name = this.props.name;
            var isIn = name.indexOf('In') >= 0;
            var isInStyle = isIn ? styles.isIn : null;
            var positioningStyle;
            if (name.indexOf('Left') >= 0) {
                positioningStyle = isIn ? styles.isRight : styles.isLeft;
            }
            else if (name.indexOf('Right') >= 0) {
                positioningStyle = isIn ? styles.isLeft : styles.isRight;
            }
            else if (name.indexOf('Up') >= 0) {
                positioningStyle = isIn ? styles.isBottom : styles.isTop;
            }
            else {
                positioningStyle = isIn ? styles.isTop : styles.isBottom;
            }
            var animationClassName = this.state.isAnimating
                ? styling_1.AnimationClassNames[this.props.name]
                : null;
            return (React.createElement("div", { className: styles.root, onClick: this._onClick },
                React.createElement("div", { className: styles.title }, this.props.name),
                React.createElement("div", { className: styles.container },
                    React.createElement("div", { className: styling_1.mergeStyles(styles.animationBox, positioningStyle, isInStyle, animationClassName) }))));
        };
        return AnimationTile;
    }(utilities_1.BaseComponent));
    exports.AnimationTile = AnimationTile;
});

//# sourceMappingURL=AnimationTile.js.map
