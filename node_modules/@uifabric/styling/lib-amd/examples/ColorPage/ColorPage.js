define(["require", "exports", "tslib", "react", "@uifabric/utilities", "@uifabric/styling", "office-ui-fabric-react/lib/DetailsList", "../Page/Page", "../PageHeader/PageHeader", "./ColorPage.styles"], function (require, exports, tslib_1, React, utilities_1, styling_1, DetailsList_1, Page_1, PageHeader_1, ColorPage_styles_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var COLUMNS = [
        {
            key: 'name',
            name: 'Name',
            fieldName: 'name',
            minWidth: 200,
            maxWidth: 300
        },
        {
            key: 'colorValue',
            name: 'Color value',
            fieldName: 'colorValue',
            minWidth: 100,
            maxWidth: 200
        },
        {
            key: 'example',
            name: 'Example',
            fieldName: 'example',
            minWidth: 300,
            maxWidth: 400
        }
    ];
    var ColorPage = (function (_super) {
        tslib_1.__extends(ColorPage, _super);
        function ColorPage() {
            var _this = _super.call(this) || this;
            _this.state = { details: null };
            return _this;
        }
        ColorPage.prototype.render = function () {
            var items = [];
            var theme = styling_1.getTheme();
            var styles = ColorPage_styles_1.getStyles();
            Object.keys(styling_1.DefaultPalette).forEach(function (colorName) {
                // tslint:disable-next-line:no-any
                var colorValue = theme.palette[colorName];
                ['', 'Hover', 'Background', 'BackgroundHover', 'Border', 'BorderHover'].forEach(function (suffix) {
                    items.push({
                        key: 'item' + items.length,
                        name: colorName + suffix,
                        colorValue: colorValue
                    });
                });
            });
            return (React.createElement(Page_1.Page, null,
                React.createElement(PageHeader_1.PageHeader, { text: 'Colors' }),
                React.createElement(DetailsList_1.DetailsList, { items: items, columns: COLUMNS, onRenderItemColumn: function (item, index, column) { return (React.createElement("div", { className: styles.cell }, column.fieldName === 'colorValue' ? (React.createElement("div", null,
                        React.createElement("div", { className: styles.swatch, style: { background: item.colorValue } }),
                        React.createElement("div", { className: styles.swatchText }, item.colorValue))) :
                        column.key === 'example' ? (React.createElement("div", { className: 
                            // tslint:disable-next-line:no-any
                            styling_1.ColorClassNames[item.name] +
                                ' ' +
                                (item.name.indexOf('Border') >= 0 ? styles.cellWithBorder : '') }, "The quick brown fox jumps over the lazy dog.")) : (
                        // tslint:disable-next-line:no-any
                        React.createElement("div", null, item[column.fieldName])))); } })));
        };
        return ColorPage;
    }(utilities_1.BaseComponent));
    exports.ColorPage = ColorPage;
});

//# sourceMappingURL=ColorPage.js.map
