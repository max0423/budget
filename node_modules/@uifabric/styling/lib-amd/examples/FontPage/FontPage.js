define(["require", "exports", "tslib", "react", "@uifabric/utilities", "../Page/Page", "../PageHeader/PageHeader", "@uifabric/styling", "./FontPage.styles"], function (require, exports, tslib_1, React, utilities_1, Page_1, PageHeader_1, styling_1, FontPage_styles_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var FontPage = (function (_super) {
        tslib_1.__extends(FontPage, _super);
        function FontPage() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FontPage.prototype.render = function () {
            var theme = styling_1.getTheme();
            var styles = FontPage_styles_1.getStyles(theme);
            return (React.createElement(Page_1.Page, null,
                React.createElement(PageHeader_1.PageHeader, { text: 'Fonts' }),
                React.createElement("table", null,
                    React.createElement("tbody", null, Object.keys(theme.fonts)
                        .filter(function (fontName) { return theme.fonts[fontName].fontSize !== undefined; })
                        .map(function (fontName) { return (React.createElement("tr", { className: styles.row, key: fontName },
                        React.createElement("td", { className: styles.cell }, "" + fontName),
                        React.createElement("td", { className: styles.cell }, "" + theme.fonts[fontName].fontSize),
                        React.createElement("td", { className: styling_1.mergeStyles(theme.fonts[fontName]) }, "The quick brown fox jumps over the lazy dog"))); })))));
        };
        return FontPage;
    }(utilities_1.BaseComponent));
    exports.FontPage = FontPage;
});
// tslint:enable:no-any

//# sourceMappingURL=FontPage.js.map
